<!DOCTYPE html>
<html lang="vi">

<head>
    <meta charset="UTF-8">
    <title>Admin Dashboard</title>
    <!-- Font Awesome cho icon -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">

    <!-- POLISH: phong cách đồng bộ với Dashboard -->
    <style>
        :root {
            --brand: #4f8cff;
            --ink: #0b1020;
            --glass: rgba(255, 255, 255, .06);
            --glass-border: rgba(255, 255, 255, .10);
            --muted: #aeb6c8;
        }

        /* ===== HEADER (Topnav) kính mờ ===== */
        .app-navbar {
            background: rgba(10, 14, 24, .65) !important;
            backdrop-filter: blur(10px);
            -webkit-backdrop-filter: blur(10px);
            border-bottom: 1px solid var(--glass-border);
            box-shadow: 0 8px 24px rgba(0, 0, 0, .25);
        }

        .app-navbar .navbar-brand {
            font-weight: 800;
            letter-spacing: .2px;
            display: flex;
            align-items: center;
            gap: .5rem;
        }

        .app-navbar .navbar-brand i {
            opacity: .9;
        }

        .app-navbar #sidebarToggle {
            border-radius: 10px;
            border: 1px solid var(--glass-border);
        }

        .app-navbar #sidebarToggle:hover {
            transform: translateY(-1px);
        }

        /* ===== Notification icon + badge ===== */
        .notification-icon {
            position: relative;
            cursor: pointer;
            width: 40px;
            height: 40px;
            display: grid;
            place-items: center;
            border-radius: 12px;
            border: 1px solid var(--glass-border);
            background: var(--glass);
            transition: transform .15s ease, background .15s ease;
        }

        .notification-icon:hover {
            background: rgba(255, 255, 255, .10);
            transform: translateY(-1px);
        }

        #notificationBadge {
            position: absolute;
            top: -6px;
            right: -4px;
            background: #ef4444;
            color: #fff;
            font-size: 11px;
            min-width: 18px;
            height: 18px;
            padding: 0 4px;
            border-radius: 10px;
            display: none;
            align-items: center;
            justify-content: center;
            box-shadow: 0 0 0 2px rgba(0, 0, 0, .3);
        }

        /* Ring animation: giữ class & keyframes cũ để JS không đổi */
        .notification-icon.ring {
            animation: ring 0.5s ease-in-out 0s 2;
        }

        @keyframes ring {
            0% {
                transform: rotate(0deg);
            }

            25% {
                transform: rotate(15deg);
            }

            50% {
                transform: rotate(-15deg);
            }

            75% {
                transform: rotate(10deg);
            }

            100% {
                transform: rotate(0deg);
            }
        }

        /* ===== Panel dropdown (glass) ===== */
        #aNotificationPanel {
            display: none;
            position: absolute;
            right: 70px;
            top: 55px;
            width: 360px;
            max-height: 420px;
            overflow: auto;
            background: rgba(17, 24, 39, .92);
            color: #e5e7eb;
            backdrop-filter: blur(12px);
            -webkit-backdrop-filter: blur(12px);
            border: 1px solid var(--glass-border);
            border-radius: 16px;
            box-shadow: 0 20px 40px rgba(0, 0, 0, .35);
            overflow: hidden;
            z-index: 1050;
        }

        #aNotificationPanel .border-bottom {
            border-color: var(--glass-border) !important;
        }

        #aNotificationPanel .list-group-item {
            background: transparent;
            color: #e5e7eb;
            border-color: var(--glass-border);
        }

        #aNotificationPanel .btn-link {
            color: var(--brand);
            text-decoration: none;
        }

        #aNotificationPanel .btn-link:hover {
            text-decoration: underline;
        }

        /* Nhã nhặn hơn cho “Welcome, Admin!” */
        .welcome-text {
            color: #e5e7eb;
            opacity: .9;
        }

        /* Giữ style cũ bạn có (để đảm bảo tương thích) */
        .sb-topnav.navbar-dark a.navbar-brand {
            color: #fff;
        }
    </style>
</head>

<body>
    <!-- Thêm class app-navbar để ăn style mới; giữ nguyên ID/JS -->
    <nav class="sb-topnav navbar navbar-expand navbar-dark app-navbar">
        <!-- Brand -->
        <a class="navbar-brand ps-3" href="/">
            <i class="fas fa-laptop"></i> Laptopshop
        </a>

        <!-- Sidebar Toggle -->
        <button class="btn btn-link btn-sm order-1 order-lg-0 me-4 me-lg-0" id="sidebarToggle" type="button">
            <i class="fas fa-bars text-white"></i>
        </button>

        <!-- Spacer -->
        <div class="flex-grow-1"></div>

        <!-- Welcome -->
        <form class="d-none d-md-inline-block form-inline me-3 my-2 my-md-0">
            <span class="welcome-text">Welcome, Admin!</span>
        </form>

        <!-- Right -->
        <ul class="navbar-nav ms-auto ms-md-0 me-3 me-lg-4 align-items-center">
            <!-- Notification Icon -->
            <li class="nav-item dropdown me-3">
                <div class="notification-icon" id="notificationDropdown" title="Thông báo">
                    <i class="fas fa-bell fa-lg text-white"></i>
                    <span id="notificationBadge"></span>
                </div>
            </li>
        </ul>

        <!-- Panel dropdown notification cho Admin -->
        <div id="aNotificationPanel" class="dropdown-menu show">
            <div class="p-3 border-bottom d-flex justify-content-between align-items-center">
                <strong>Thông báo</strong>
                <button id="aMarkAllRead" class="btn btn-sm btn-link">Đánh dấu đã đọc</button>
            </div>
            <ul id="aNotificationList" class="list-group list-group-flush"></ul>
        </div>

        <!-- Âm thanh -->
        <audio id="aNotificationSound" src="/ring.wav" preload="auto"></audio>
    </nav>

    <!-- Socket.IO client -->
    <script src="/socket.io/socket.io.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/js/bootstrap.bundle.min.js"
        crossorigin="anonymous"></script>

    <script>
        const aBadge = document.getElementById('notificationBadge');
        const aIcon = document.getElementById('notificationDropdown');
        const aPanel = document.getElementById('aNotificationPanel');
        const aList = document.getElementById('aNotificationList');
        const aSound = document.getElementById('aNotificationSound');

        // Toggle panel (giữ y nguyên logic)
        aIcon.addEventListener('click', () => {
            aPanel.style.display = (aPanel.style.display === 'none' || aPanel.style.display === '') ? 'block' : 'none';
            aIcon.classList.remove('ring');
        });

        function aUpdateBadge(delta = 1) {
            let cur = parseInt(aBadge.textContent || "0", 10);
            cur = isNaN(cur) ? 0 : cur;
            cur += delta;
            if (cur <= 0) {
                aBadge.style.display = "none";
                aBadge.textContent = "0";
            } else {
                aBadge.style.display = "flex";
                aBadge.textContent = cur > 9 ? "9+" : String(cur);
            }
        }

        function aPrepend(itemHtml) {
            const li = document.createElement('li');
            li.className = 'list-group-item';
            li.innerHTML = itemHtml;
            aList.prepend(li);
        }

        function aRing() {
            aIcon.classList.add('ring');
            try { aSound.currentTime = 0; aSound.play(); } catch { }
        }

        document.getElementById('aMarkAllRead').addEventListener('click', () => {
            aBadge.style.display = 'none'; aBadge.textContent = '0';
        });

        // Socket giữ nguyên
        const aSocket = io(); // same origin
        aSocket.on('connect', () => {
            aSocket.emit('join-admin-room');
        });

        // User đặt hàng -> admin nhận
        aSocket.on('new-order', (data) => {
            aRing();
            aUpdateBadge(1);
            const url = `/admin/order/${data.orderId}`;
            aPrepend(`
        <div class="d-flex justify-content-between align-items-start">
          <div>
            <div class="fw-semibold">Đơn #${data.orderId} từ ${data.customerName || 'khách hàng'}</div>
            <small class="text-muted">${new Date(data.createdAt || Date.now()).toLocaleString('vi-VN')}</small>
          </div>
          <a href="${url}" class="btn btn-sm btn-primary ms-2">Xem</a>
        </div>
      `);
        });

        // Mọi cập nhật đơn
        aSocket.on('order-updated', (data) => {
            aRing();
            aUpdateBadge(1);
            const url = `/admin/order/${data.orderId}`;
            aPrepend(`
        <div class="d-flex justify-content-between align-items-start">
          <div>
            <div class="fw-semibold">Đơn #${data.orderId} cập nhật: ${data.status}</div>
            <small class="text-muted">${new Date().toLocaleString('vi-VN')}</small>
          </div>
          <a href="${url}" class="btn btn-sm btn-primary ms-2">Xem</a>
        </div>
      `);
        });
    </script>
</body>

</html>